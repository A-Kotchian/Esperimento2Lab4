import csv                              #per prendere i dati dal file
import numpy as np                      #lo uso per il fit
import matplotlib.pyplot as plt         #idem
from scipy.optimize import curve_fit    #ridem
import ROOT as r

#def seno(t, D, E):
#    ris=float(D)*np.sin((E)*t)
#    return ris
#file = open("test.csv", "r")
#x = list(csv.DictReader(file, delimiter=","))
#file.close()
#datax = list(map(float, x))
#datay=[]
#cont=float(0)
#for i in range(len(datax)):
 #   datay.append(cont)
  #  cont+=1
datax = [0.9999668, 1.999944, 2.999957, 3.99978, 4.999703, 5.999824, 6.999674, 7.999746, 9.001547, 9.999359, 11.00135, 11.99927, 13.00136, 13.99887, 15.00113, 15.99924, 17.00115, 17.99902, 19.00092, 19.99902, 21.00095, 21.99511, 22.99341,23.99503,24.99311,25.99548,26.99345,27.99636,28.99011,29.99356,30.98971,31.9953,32.99134,33.99546,34.99228,35.99619,36.99438,37.99694,38.99363,39.99454,40.99496,41.99672,42.9976,43.99769,44.99837,45.99798,46.99866,47.99602,48.99653,49.99688,50.99711,51.99661,52.99699,53.99799,54.9981,55.99902,56.99871,57.99563,58.99623, 59.99666]
datay = [4.263275569009558, 4.309240901911437,3.6555117228624283,2.8128139529945564,2.0875831449870574,2.307195291073832,3.4410068359869683,4.283704605854837,4.4318151229831315,3.2367164675341513,2.113119441043658,1.8986145541681978,3.0171043214473734,4.45224415982841,4.498209492730297,2.848564767473796,1.5921790014889723,1.8373274436323541,3.4205777991416895,4.901682970424609,9.258175077680932,6.975230210220701,3.44611409519829,1.6892169265040629,4.104950533458624,8.160114347247038,8.40526278939042,4.477780455885014,1.8271129252097111,2.914959137220965,6.086567107450946,8.068183681443273,5.805667850828325,1.8066838883644323,1.8220056659983932,5.693308148179277,7.567672278733873,5.284727411273643,2.307195291073832,1.8373274436323541,4.4113860861378456,6.82711969309241,5.499232298149099,2.27655173580591,1.3266015225003116,3.665726241285064,6.214248587733959,5.575841186318904,2.5370219555832527,1.224456338273903,2.9353881740662473,5.62180651922079,5.289834670484964,2.644274399020979,1.1120966356248516,2.715776027979466,5.065115265186861,4.978291858594417,2.5625582516398566,1.040595006666365]
          
datax=np.array(datax)
datay=np.array(datay)

g=r.TGraph(datax, datay)
g.Fit(r.Sin(x))
g.Draw()

#parametri, covarianza = curve_fit(seno, datax, datay)

#fit_A = parametri[0]
#fit_B = parametri[1]
#print(fit_A)
#print(fit_B)

#fit_seno = seno(datax, fit_A, fit_B)

#plt.plot(datax, datay, 'o', label='dati')
#plt.plot(datax, fit_seno, '-', label='fit')

#SE = np.sqrt(np.diag(covarianza))
#SE_A = SE[0]
#SE_B = SE[1]

#print(F'The value of A is {fit_A:.5f} with standard error of {SE_A:.5f}.')
#print(F'The value of B is {fit_B:.5f} with standard error of {SE_B:.5f}.')

#plt.show()
